# 网络流
# 一个网络 G = (V, E)是一张有向图，图中每条有向边(x,y)属于E都有一个权值c(x,y)，称为边的容量，若(x,y) 不属于E， c(x,y) = 0
# 图中还有两个特殊的节地S，T 属于V，分别称为源点和汇点

# 流函数 f
# 定义在节点二元组(x, y)上的实数函数
# 1. f(x, y) <= c(x, y)  容量限制
# 2. f(x, y) = -f(y, -x)  斜对称
# 3. 任意x不等于S，T， ∑(u,x属于E)f(u, x) = ∑(x,v属于E)f(x, v)  流量守恒

# 最大流
# 对于给定的网络，合法的流函数很多，其中，使得整个网络函数的流量∑(S,v属于E)f(S, v)最大的流函数称为最大流
# 例子 二分图的最大匹配是网络的最大流（n个点，m条边的二分图，新增源点S，S到每个左部点连有向边，新增汇点T，每个右部点到T连有向边）

# Edmonds-Karp增广路算法
# 增广路： 从源点到汇点的路径上各条边的剩余容量都大于0
# EK算法思想：不断用BFS寻找增广路，直到网络中不存在增广路
# 每轮寻找增广路的过程中，只考虑图中f(x,y)<c(c,y)的边，用BFS找一条从S到T包含边数最少的路径，同时计算路径上各边剩余容量的最小值minf
# 注意：若一条边流量f(x,y)>0,根据斜对称性质，f(y,x)<0,必有f(y,x)<c(y,x)，所有需要考虑E中的反向边
